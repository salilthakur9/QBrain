spring.application.name=mcq-generator
# MongoDB Configuration
#spring.data.mongodb.uri=mongodb+srv://salil16:salil9@cluster0.khyie.mongodb.net/mcq_generator_db?retryWrites=true&w=majority

# JWT Secret Key
jwt.secret=your-super-secret-key-that-is-at-least-256-bits-long-for-hs256
jwt.expiration.ms=86400000
server.port=8081
gemini.api.key=AIzaSyBwkNYO-yTveGrNlu9RJEdGF42htsj-J7Q

# =======================================
#        MYSQL DATABASE CONFIG
# =======================================

# The URL points to our database. jdbc:mysql is the protocol.
# localhost:3306 is the default server address and port for MySQL.
# mcq_generator_db is the database name we created.
spring.datasource.url=jdbc:mysql://localhost:3306/mcq_generator_db

# The username and password we created in Step 1
spring.datasource.username=salil
spring.datasource.password=salil

# --- JPA & Hibernate Settings ---

# This is a very powerful setting. 'update' means Hibernate will automatically
# create and update database tables based on your @Entity classes.
# Perfect for development! Other options are 'create', 'validate', 'none'.
spring.jpa.hibernate.ddl-auto=update

# This will print the actual SQL queries to the console, which is great for debugging.
spring.jpa.show-sql=true